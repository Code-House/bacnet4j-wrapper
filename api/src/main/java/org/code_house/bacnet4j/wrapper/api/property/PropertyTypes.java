package org.code_house.bacnet4j.wrapper.api.property;

import org.code_house.bacnet4j.wrapper.api.PropertyType;
import org.code_house.bacnet4j.wrapper.api.type.SimpleType;

public class PropertyTypes {
    public static final PropertyType acked_transitions = new SimpleType(0, "acked_transitions");
    public static final PropertyType ack_required = new SimpleType(1, "ack_required");
    public static final PropertyType action = new SimpleType(2, "action");
    public static final PropertyType action_text = new SimpleType(3, "action_text");
    public static final PropertyType active_text = new SimpleType(4, "active_text");
    public static final PropertyType active_vt_sessions = new SimpleType(5, "active_vt_sessions");
    public static final PropertyType alarm_value = new SimpleType(6, "alarm_value");
    public static final PropertyType alarm_values = new SimpleType(7, "alarm_values");
    public static final PropertyType all = new SimpleType(8, "all");
    public static final PropertyType all_writes_successful = new SimpleType(9, "all_writes_successful");
    public static final PropertyType apdu_segment_timeout = new SimpleType(10, "apdu_segment_timeout");
    public static final PropertyType apdu_timeout = new SimpleType(11, "apdu_timeout");
    public static final PropertyType application_software_version = new SimpleType(12, "application_software_version");
    public static final PropertyType archive = new SimpleType(13, "archive");
    public static final PropertyType bias = new SimpleType(14, "bias");
    public static final PropertyType change_of_state_count = new SimpleType(15, "change_of_state_count");
    public static final PropertyType change_of_state_time = new SimpleType(16, "change_of_state_time");
    public static final PropertyType notification_class = new SimpleType(17, "notification_class");
    public static final PropertyType controlled_variable_reference = new SimpleType(19, "controlled_variable_reference");
    public static final PropertyType controlled_variable_units = new SimpleType(20, "controlled_variable_units");
    public static final PropertyType controlled_variable_value = new SimpleType(21, "controlled_variable_value");
    public static final PropertyType cov_increment = new SimpleType(22, "cov_increment");
    public static final PropertyType date_list = new SimpleType(23, "date_list");
    public static final PropertyType daylight_savings_status = new SimpleType(24, "daylight_savings_status");
    public static final PropertyType deadband = new SimpleType(25, "deadband");
    public static final PropertyType derivative_constant = new SimpleType(26, "derivative_constant");
    public static final PropertyType derivative_constant_units = new SimpleType(27, "derivative_constant_units");
    public static final PropertyType description = new SimpleType(28, "description");
    public static final PropertyType description_of_halt = new SimpleType(29, "description_of_halt");
    public static final PropertyType device_address_binding = new SimpleType(30, "device_address_binding");
    public static final PropertyType device_type = new SimpleType(31, "device_type");
    public static final PropertyType effective_period = new SimpleType(32, "effective_period");
    public static final PropertyType elapsed_active_time = new SimpleType(33, "elapsed_active_time");
    public static final PropertyType error_limit = new SimpleType(34, "error_limit");
    public static final PropertyType event_enable = new SimpleType(35, "event_enable");
    public static final PropertyType event_state = new SimpleType(36, "event_state");
    public static final PropertyType event_type = new SimpleType(37, "event_type");
    public static final PropertyType exception_schedule = new SimpleType(38, "exception_schedule");
    public static final PropertyType fault_values = new SimpleType(39, "fault_values");
    public static final PropertyType feedback_value = new SimpleType(40, "feedback_value");
    public static final PropertyType file_access_method = new SimpleType(41, "file_access_method");
    public static final PropertyType file_size = new SimpleType(42, "file_size");
    public static final PropertyType file_type = new SimpleType(43, "file_type");
    public static final PropertyType firmware_revision = new SimpleType(44, "firmware_revision");
    public static final PropertyType high_limit = new SimpleType(45, "high_limit");
    public static final PropertyType inactive_text = new SimpleType(46, "inactive_text");
    public static final PropertyType in_process = new SimpleType(47, "in_process");
    public static final PropertyType instance_of = new SimpleType(48, "instance_of");
    public static final PropertyType integral_constant = new SimpleType(49, "integral_constant");
    public static final PropertyType integral_constant_units = new SimpleType(50, "integral_constant_units");
    public static final PropertyType limit_enable = new SimpleType(52, "limit_enable");
    public static final PropertyType list_of_group_members = new SimpleType(53, "list_of_group_members");
    public static final PropertyType list_of_object_property_references = new SimpleType(54, "list_of_object_property_references");
    public static final PropertyType local_date = new SimpleType(56, "local_date");
    public static final PropertyType local_time = new SimpleType(57, "local_time");
    public static final PropertyType location = new SimpleType(58, "location");
    public static final PropertyType low_limit = new SimpleType(59, "low_limit");
    public static final PropertyType manipulated_variable_reference = new SimpleType(60, "manipulated_variable_reference");
    public static final PropertyType maximum_output = new SimpleType(61, "maximum_output");
    public static final PropertyType max_apdu_length_accepted = new SimpleType(62, "max_apdu_length_accepted");
    public static final PropertyType max_info_frames = new SimpleType(63, "max_info_frames");
    public static final PropertyType max_master = new SimpleType(64, "max_master");
    public static final PropertyType max_pres_value = new SimpleType(65, "max_pres_value");
    public static final PropertyType minimum_off_time = new SimpleType(66, "minimum_off_time");
    public static final PropertyType minimum_on_time = new SimpleType(67, "minimum_on_time");
    public static final PropertyType minimum_output = new SimpleType(68, "minimum_output");
    public static final PropertyType min_pres_value = new SimpleType(69, "min_pres_value");
    public static final PropertyType model_name = new SimpleType(70, "model_name");
    public static final PropertyType modification_date = new SimpleType(71, "modification_date");
    public static final PropertyType notify_type = new SimpleType(72, "notify_type");
    public static final PropertyType number_of_apdu_retries = new SimpleType(73, "number_of_apdu_retries");
    public static final PropertyType number_of_states = new SimpleType(74, "number_of_states");
    public static final PropertyType object_identifier = new SimpleType(75, "object_identifier");
    public static final PropertyType object_list = new SimpleType(76, "object_list");
    public static final PropertyType object_name = new SimpleType(77, "object_name");
    public static final PropertyType object_property_reference = new SimpleType(78, "object_property_reference");
    public static final PropertyType object_type = new SimpleType(79, "object_type");
    public static final PropertyType optional = new SimpleType(80, "optional");
    public static final PropertyType out_of_service = new SimpleType(81, "out_of_service");
    public static final PropertyType output_units = new SimpleType(82, "output_units");
    public static final PropertyType event_parameters = new SimpleType(83, "event_parameters");
    public static final PropertyType polarity = new SimpleType(84, "polarity");
    public static final PropertyType present_value = new SimpleType(85, "present_value");
    public static final PropertyType priority = new SimpleType(86, "priority");
    public static final PropertyType priority_array = new SimpleType(87, "priority_array");
    public static final PropertyType priority_for_writing = new SimpleType(88, "priority_for_writing");
    public static final PropertyType process_identifier = new SimpleType(89, "process_identifier");
    public static final PropertyType program_change = new SimpleType(90, "program_change");
    public static final PropertyType program_location = new SimpleType(91, "program_location");
    public static final PropertyType program_state = new SimpleType(92, "program_state");
    public static final PropertyType proportional_constant = new SimpleType(93, "proportional_constant");
    public static final PropertyType proportional_constant_units = new SimpleType(94, "proportional_constant_units");
    public static final PropertyType protocol_object_types_supported = new SimpleType(96, "protocol_object_types_supported");
    public static final PropertyType protocol_services_supported = new SimpleType(97, "protocol_services_supported");
    public static final PropertyType protocol_version = new SimpleType(98, "protocol_version");
    public static final PropertyType read_only = new SimpleType(99, "read_only");
    public static final PropertyType reason_for_halt = new SimpleType(100, "reason_for_halt");
    public static final PropertyType recipient_list = new SimpleType(102, "recipient_list");
    public static final PropertyType reliability = new SimpleType(103, "reliability");
    public static final PropertyType relinquish_default = new SimpleType(104, "relinquish_default");
    public static final PropertyType required = new SimpleType(105, "required");
    public static final PropertyType resolution = new SimpleType(106, "resolution");
    public static final PropertyType segmentation_supported = new SimpleType(107, "segmentation_supported");
    public static final PropertyType setpoint = new SimpleType(108, "setpoint");
    public static final PropertyType setpoint_reference = new SimpleType(109, "setpoint_reference");
    public static final PropertyType state_text = new SimpleType(110, "state_text");
    public static final PropertyType status_flags = new SimpleType(111, "status_flags");
    public static final PropertyType system_status = new SimpleType(112, "system_status");
    public static final PropertyType time_delay = new SimpleType(113, "time_delay");
    public static final PropertyType time_of_active_time_reset = new SimpleType(114, "time_of_active_time_reset");
    public static final PropertyType time_of_state_count_reset = new SimpleType(115, "time_of_state_count_reset");
    public static final PropertyType time_synchronization_recipients = new SimpleType(116, "time_synchronization_recipients");
    public static final PropertyType units = new SimpleType(117, "units");
    public static final PropertyType update_interval = new SimpleType(118, "update_interval");
    public static final PropertyType utc_offset = new SimpleType(119, "utc_offset");
    public static final PropertyType vendor_identifier = new SimpleType(120, "vendor_identifier");
    public static final PropertyType vendor_name = new SimpleType(121, "vendor_name");
    public static final PropertyType vt_classes_supported = new SimpleType(122, "vt_classes_supported");
    public static final PropertyType weekly_schedule = new SimpleType(123, "weekly_schedule");
    public static final PropertyType attempted_samples = new SimpleType(124, "attempted_samples");
    public static final PropertyType average_value = new SimpleType(125, "average_value");
    public static final PropertyType buffer_size = new SimpleType(126, "buffer_size");
    public static final PropertyType client_cov_increment = new SimpleType(127, "client_cov_increment");
    public static final PropertyType cov_resubscription_interval = new SimpleType(128, "cov_resubscription_interval");
    public static final PropertyType event_time_stamps = new SimpleType(130, "event_time_stamps");
    public static final PropertyType log_buffer = new SimpleType(131, "log_buffer");
    public static final PropertyType log_device_object_property = new SimpleType(132, "log_device_object_property");
    public static final PropertyType log_interval = new SimpleType(134, "log_interval");
    public static final PropertyType maximum_value = new SimpleType(135, "maximum_value");
    public static final PropertyType minimum_value = new SimpleType(136, "minimum_value");
    public static final PropertyType notification_threshold = new SimpleType(137, "notification_threshold");
    public static final PropertyType protocol_revision = new SimpleType(139, "protocol_revision");
    public static final PropertyType records_since_notification = new SimpleType(140, "records_since_notification");
    public static final PropertyType record_count = new SimpleType(141, "record_count");
    public static final PropertyType start_time = new SimpleType(142, "start_time");
    public static final PropertyType stop_time = new SimpleType(143, "stop_time");
    public static final PropertyType stop_when_full = new SimpleType(144, "stop_when_full");
    public static final PropertyType total_record_count = new SimpleType(145, "total_record_count");
    public static final PropertyType valid_samples = new SimpleType(146, "valid_samples");
    public static final PropertyType window_interval = new SimpleType(147, "window_interval");
    public static final PropertyType window_samples = new SimpleType(148, "window_samples");
    public static final PropertyType maximum_value_timestamp = new SimpleType(149, "maximum_value_timestamp");
    public static final PropertyType minimum_value_timestamp = new SimpleType(150, "minimum_value_timestamp");
    public static final PropertyType variance_value = new SimpleType(151, "variance_value");
    public static final PropertyType active_cov_subscriptions = new SimpleType(152, "active_cov_subscriptions");
    public static final PropertyType backup_failure_timeout = new SimpleType(153, "backup_failure_timeout");
    public static final PropertyType configuration_files = new SimpleType(154, "configuration_files");
    public static final PropertyType database_revision = new SimpleType(155, "database_revision");
    public static final PropertyType direct_reading = new SimpleType(156, "direct_reading");
    public static final PropertyType last_restore_time = new SimpleType(157, "last_restore_time");
    public static final PropertyType maintenance_required = new SimpleType(158, "maintenance_required");
    public static final PropertyType member_of = new SimpleType(159, "member_of");
    public static final PropertyType mode = new SimpleType(160, "mode");
    public static final PropertyType operation_expected = new SimpleType(161, "operation_expected");
    public static final PropertyType setting = new SimpleType(162, "setting");
    public static final PropertyType silenced = new SimpleType(163, "silenced");
    public static final PropertyType tracking_value = new SimpleType(164, "tracking_value");
    public static final PropertyType zone_members = new SimpleType(165, "zone_members");
    public static final PropertyType life_safety_alarm_values = new SimpleType(166, "life_safety_alarm_values");
    public static final PropertyType max_segments_accepted = new SimpleType(167, "max_segments_accepted");
    public static final PropertyType profile_name = new SimpleType(168, "profile_name");
    public static final PropertyType auto_slave_discovery = new SimpleType(169, "auto_slave_discovery");
    public static final PropertyType manual_slave_address_binding = new SimpleType(170, "manual_slave_address_binding");
    public static final PropertyType slave_address_binding = new SimpleType(171, "slave_address_binding");
    public static final PropertyType slave_proxy_enable = new SimpleType(172, "slave_proxy_enable");
    public static final PropertyType last_notify_record = new SimpleType(173, "last_notify_record");
    public static final PropertyType schedule_default = new SimpleType(174, "schedule_default");
    public static final PropertyType accepted_modes = new SimpleType(175, "accepted_modes");
    public static final PropertyType adjust_value = new SimpleType(176, "adjust_value");
    public static final PropertyType count = new SimpleType(177, "count");
    public static final PropertyType count_before_change = new SimpleType(178, "count_before_change");
    public static final PropertyType count_change_time = new SimpleType(179, "count_change_time");
    public static final PropertyType cov_period = new SimpleType(180, "cov_period");
    public static final PropertyType input_reference = new SimpleType(181, "input_reference");
    public static final PropertyType limit_monitoring_interval = new SimpleType(182, "limit_monitoring_interval");
    public static final PropertyType logging_object = new SimpleType(183, "logging_object");
    public static final PropertyType logging_record = new SimpleType(184, "logging_record");
    public static final PropertyType prescale = new SimpleType(185, "prescale");
    public static final PropertyType pulse_rate = new SimpleType(186, "pulse_rate");
    public static final PropertyType scale = new SimpleType(187, "scale");
    public static final PropertyType scale_factor = new SimpleType(188, "scale_factor");
    public static final PropertyType update_time = new SimpleType(189, "update_time");
    public static final PropertyType value_before_change = new SimpleType(190, "value_before_change");
    public static final PropertyType value_set = new SimpleType(191, "value_set");
    public static final PropertyType value_change_time = new SimpleType(192, "value_change_time");
    public static final PropertyType align_intervals = new SimpleType(193, "align_intervals");
    public static final PropertyType interval_offset = new SimpleType(195, "interval_offset");
    public static final PropertyType last_restart_reason = new SimpleType(196, "last_restart_reason");
    public static final PropertyType logging_type = new SimpleType(197, "logging_type");
    public static final PropertyType restart_notification_recipients = new SimpleType(202, "restart_notification_recipients");
    public static final PropertyType time_of_device_restart = new SimpleType(203, "time_of_device_restart");
    public static final PropertyType time_synchronization_interval = new SimpleType(204, "time_synchronization_interval");
    public static final PropertyType trigger = new SimpleType(205, "trigger");
    public static final PropertyType utc_time_synchronization_recipients = new SimpleType(206, "utc_time_synchronization_recipients");
    public static final PropertyType node_subtype = new SimpleType(207, "node_subtype");
    public static final PropertyType node_type = new SimpleType(208, "node_type");
    public static final PropertyType structured_object_list = new SimpleType(209, "structured_object_list");
    public static final PropertyType subordinate_annotations = new SimpleType(210, "subordinate_annotations");
    public static final PropertyType subordinate_list = new SimpleType(211, "subordinate_list");
    public static final PropertyType actual_shed_level = new SimpleType(212, "actual_shed_level");
    public static final PropertyType duty_window = new SimpleType(213, "duty_window");
    public static final PropertyType expected_shed_level = new SimpleType(214, "expected_shed_level");
    public static final PropertyType full_duty_baseline = new SimpleType(215, "full_duty_baseline");
    public static final PropertyType requested_shed_level = new SimpleType(218, "requested_shed_level");
    public static final PropertyType shed_duration = new SimpleType(219, "shed_duration");
    public static final PropertyType shed_level_descriptions = new SimpleType(220, "shed_level_descriptions");
    public static final PropertyType shed_levels = new SimpleType(221, "shed_levels");
    public static final PropertyType state_description = new SimpleType(222, "state_description");
    public static final PropertyType door_alarm_state = new SimpleType(226, "door_alarm_state");
    public static final PropertyType door_extended_pulse_time = new SimpleType(227, "door_extended_pulse_time");
    public static final PropertyType door_members = new SimpleType(228, "door_members");
    public static final PropertyType door_open_too_long_time = new SimpleType(229, "door_open_too_long_time");
    public static final PropertyType door_pulse_time = new SimpleType(230, "door_pulse_time");
    public static final PropertyType door_status = new SimpleType(231, "door_status");
    public static final PropertyType door_unlock_delay_time = new SimpleType(232, "door_unlock_delay_time");
    public static final PropertyType lock_status = new SimpleType(233, "lock_status");
    public static final PropertyType masked_alarm_values = new SimpleType(234, "masked_alarm_values");
    public static final PropertyType secured_status = new SimpleType(235, "secured_status");
    public static final PropertyType absentee_limit = new SimpleType(244, "absentee_limit");
    public static final PropertyType access_alarm_events = new SimpleType(245, "access_alarm_events");
    public static final PropertyType access_doors = new SimpleType(246, "access_doors");
    public static final PropertyType access_event = new SimpleType(247, "access_event");
    public static final PropertyType access_event_authentication_factor = new SimpleType(248, "access_event_authentication_factor");
    public static final PropertyType access_event_credential = new SimpleType(249, "access_event_credential");
    public static final PropertyType access_event_time = new SimpleType(250, "access_event_time");
    public static final PropertyType access_transaction_events = new SimpleType(251, "access_transaction_events");
    public static final PropertyType accompaniment = new SimpleType(252, "accompaniment");
    public static final PropertyType accompaniment_time = new SimpleType(253, "accompaniment_time");
    public static final PropertyType activation_time = new SimpleType(254, "activation_time");
    public static final PropertyType active_authentication_policy = new SimpleType(255, "active_authentication_policy");
    public static final PropertyType assigned_access_rights = new SimpleType(256, "assigned_access_rights");
    public static final PropertyType authentication_factors = new SimpleType(257, "authentication_factors");
    public static final PropertyType authentication_policy_list = new SimpleType(258, "authentication_policy_list");
    public static final PropertyType authentication_policy_names = new SimpleType(259, "authentication_policy_names");
    public static final PropertyType authentication_status = new SimpleType(260, "authentication_status");
    public static final PropertyType authorization_mode = new SimpleType(261, "authorization_mode");
    public static final PropertyType belongs_to = new SimpleType(262, "belongs_to");
    public static final PropertyType credential_disable = new SimpleType(263, "credential_disable");
    public static final PropertyType credential_status = new SimpleType(264, "credential_status");
    public static final PropertyType credentials = new SimpleType(265, "credentials");
    public static final PropertyType credentials_in_zone = new SimpleType(266, "credentials_in_zone");
    public static final PropertyType days_remaining = new SimpleType(267, "days_remaining");
    public static final PropertyType entry_points = new SimpleType(268, "entry_points");
    public static final PropertyType exit_points = new SimpleType(269, "exit_points");
    public static final PropertyType expiration_time = new SimpleType(270, "expiration_time");
    public static final PropertyType extended_time_enable = new SimpleType(271, "extended_time_enable");
    public static final PropertyType failed_attempt_events = new SimpleType(272, "failed_attempt_events");
    public static final PropertyType failed_attempts = new SimpleType(273, "failed_attempts");
    public static final PropertyType failed_attempts_time = new SimpleType(274, "failed_attempts_time");
    public static final PropertyType last_access_event = new SimpleType(275, "last_access_event");
    public static final PropertyType last_access_point = new SimpleType(276, "last_access_point");
    public static final PropertyType last_credential_added = new SimpleType(277, "last_credential_added");
    public static final PropertyType last_credential_added_time = new SimpleType(278, "last_credential_added_time");
    public static final PropertyType last_credential_removed = new SimpleType(279, "last_credential_removed");
    public static final PropertyType last_credential_removed_time = new SimpleType(280, "last_credential_removed_time");
    public static final PropertyType last_use_time = new SimpleType(281, "last_use_time");
    public static final PropertyType lockout = new SimpleType(282, "lockout");
    public static final PropertyType lockout_relinquish_time = new SimpleType(283, "lockout_relinquish_time");
    public static final PropertyType max_failed_attempts = new SimpleType(285, "max_failed_attempts");
    public static final PropertyType members = new SimpleType(286, "members");
    public static final PropertyType muster_point = new SimpleType(287, "muster_point");
    public static final PropertyType negative_access_rules = new SimpleType(288, "negative_access_rules");
    public static final PropertyType number_of_authentication_policies = new SimpleType(289, "number_of_authentication_policies");
    public static final PropertyType occupancy_count = new SimpleType(290, "occupancy_count");
    public static final PropertyType occupancy_count_adjust = new SimpleType(291, "occupancy_count_adjust");
    public static final PropertyType occupancy_count_enable = new SimpleType(292, "occupancy_count_enable");
    public static final PropertyType occupancy_lower_limit = new SimpleType(294, "occupancy_lower_limit");
    public static final PropertyType occupancy_lower_limit_enforced = new SimpleType(295, "occupancy_lower_limit_enforced");
    public static final PropertyType occupancy_state = new SimpleType(296, "occupancy_state");
    public static final PropertyType occupancy_upper_limit = new SimpleType(297, "occupancy_upper_limit");
    public static final PropertyType occupancy_upper_limit_enforced = new SimpleType(298, "occupancy_upper_limit_enforced");
    public static final PropertyType passback_mode = new SimpleType(300, "passback_mode");
    public static final PropertyType passback_timeout = new SimpleType(301, "passback_timeout");
    public static final PropertyType positive_access_rules = new SimpleType(302, "positive_access_rules");
    public static final PropertyType reason_for_disable = new SimpleType(303, "reason_for_disable");
    public static final PropertyType supported_formats = new SimpleType(304, "supported_formats");
    public static final PropertyType supported_format_classes = new SimpleType(305, "supported_format_classes");
    public static final PropertyType threat_authority = new SimpleType(306, "threat_authority");
    public static final PropertyType threat_level = new SimpleType(307, "threat_level");
    public static final PropertyType trace_flag = new SimpleType(308, "trace_flag");
    public static final PropertyType transaction_notification_class = new SimpleType(309, "transaction_notification_class");
    public static final PropertyType user_external_identifier = new SimpleType(310, "user_external_identifier");
    public static final PropertyType user_information_reference = new SimpleType(311, "user_information_reference");
    public static final PropertyType user_name = new SimpleType(317, "user_name");
    public static final PropertyType user_type = new SimpleType(318, "user_type");
    public static final PropertyType uses_remaining = new SimpleType(319, "uses_remaining");
    public static final PropertyType zone_from = new SimpleType(320, "zone_from");
    public static final PropertyType zone_to = new SimpleType(321, "zone_to");
    public static final PropertyType access_event_tag = new SimpleType(322, "access_event_tag");
    public static final PropertyType global_identifier = new SimpleType(323, "global_identifier");
    public static final PropertyType verification_time = new SimpleType(326, "verification_time");
    public static final PropertyType base_device_security_policy = new SimpleType(327, "base_device_security_policy");
    public static final PropertyType distribution_key_revision = new SimpleType(328, "distribution_key_revision");
    public static final PropertyType do_not_hide = new SimpleType(329, "do_not_hide");
    public static final PropertyType key_sets = new SimpleType(330, "key_sets");
    public static final PropertyType last_key_server = new SimpleType(331, "last_key_server");
    public static final PropertyType network_access_security_policies = new SimpleType(332, "network_access_security_policies");
    public static final PropertyType packet_reorder_time = new SimpleType(333, "packet_reorder_time");
    public static final PropertyType security_pdu_timeout = new SimpleType(334, "security_pdu_timeout");
    public static final PropertyType security_time_window = new SimpleType(335, "security_time_window");
    public static final PropertyType supported_security_algorithms = new SimpleType(336, "supported_security_algorithms");
    public static final PropertyType update_key_set_timeout = new SimpleType(337, "update_key_set_timeout");
    public static final PropertyType backup_and_restore_state = new SimpleType(338, "backup_and_restore_state");
    public static final PropertyType backup_preparation_time = new SimpleType(339, "backup_preparation_time");
    public static final PropertyType restore_completion_time = new SimpleType(340, "restore_completion_time");
    public static final PropertyType restore_preparation_time = new SimpleType(341, "restore_preparation_time");
    public static final PropertyType bit_mask = new SimpleType(342, "bit_mask");
    public static final PropertyType bit_text = new SimpleType(343, "bit_text");
    public static final PropertyType is_utc = new SimpleType(344, "is_utc");
    public static final PropertyType group_members = new SimpleType(345, "group_members");
    public static final PropertyType group_member_names = new SimpleType(346, "group_member_names");
    public static final PropertyType member_status_flags = new SimpleType(347, "member_status_flags");
    public static final PropertyType requested_update_interval = new SimpleType(348, "requested_update_interval");
    public static final PropertyType covu_period = new SimpleType(349, "covu_period");
    public static final PropertyType covu_recipients = new SimpleType(350, "covu_recipients");
    public static final PropertyType event_message_texts = new SimpleType(351, "event_message_texts");
    public static final PropertyType event_message_texts_config = new SimpleType(352, "event_message_texts_config");
    public static final PropertyType event_detection_enable = new SimpleType(353, "event_detection_enable");
    public static final PropertyType event_algorithm_inhibit = new SimpleType(354, "event_algorithm_inhibit");
    public static final PropertyType event_algorithm_inhibit_ref = new SimpleType(355, "event_algorithm_inhibit_ref");
    public static final PropertyType time_delay_normal = new SimpleType(356, "time_delay_normal");
    public static final PropertyType reliability_evaluation_inhibit = new SimpleType(357, "reliability_evaluation_inhibit");
    public static final PropertyType fault_parameters = new SimpleType(358, "fault_parameters");
    public static final PropertyType fault_type = new SimpleType(359, "fault_type");
    public static final PropertyType local_forwarding_only = new SimpleType(360, "local_forwarding_only");
    public static final PropertyType process_identifier_filter = new SimpleType(361, "process_identifier_filter");
    public static final PropertyType subscribed_recipients = new SimpleType(362, "subscribed_recipients");
    public static final PropertyType port_filter = new SimpleType(363, "port_filter");
    public static final PropertyType authorization_exemptions = new SimpleType(364, "authorization_exemptions");
    public static final PropertyType allow_group_delay_inhibit = new SimpleType(365, "allow_group_delay_inhibit");
    public static final PropertyType channel_number = new SimpleType(366, "channel_number");
    public static final PropertyType control_groups = new SimpleType(367, "control_groups");
    public static final PropertyType execution_delay = new SimpleType(368, "execution_delay");
    public static final PropertyType last_priority = new SimpleType(369, "last_priority");
    public static final PropertyType write_status = new SimpleType(370, "write_status");
    public static final PropertyType property_list = new SimpleType(371, "property_list");
    public static final PropertyType serial_number = new SimpleType(372, "serial_number");
    public static final PropertyType blink_warn_enable = new SimpleType(373, "blink_warn_enable");
    public static final PropertyType default_fade_time = new SimpleType(374, "default_fade_time");
    public static final PropertyType default_ramp_rate = new SimpleType(375, "default_ramp_rate");
    public static final PropertyType default_step_increment = new SimpleType(376, "default_step_increment");
    public static final PropertyType egress_time = new SimpleType(377, "egress_time");
    public static final PropertyType in_progress = new SimpleType(378, "in_progress");
    public static final PropertyType instantaneous_power = new SimpleType(379, "instantaneous_power");
    public static final PropertyType lighting_command = new SimpleType(380, "lighting_command");
    public static final PropertyType lighting_command_default_priority = new SimpleType(381, "lighting_command_default_priority");
    public static final PropertyType max_actual_value = new SimpleType(382, "max_actual_value");
    public static final PropertyType min_actual_value = new SimpleType(383, "min_actual_value");
    public static final PropertyType power = new SimpleType(384, "power");
    public static final PropertyType transition = new SimpleType(385, "transition");
    public static final PropertyType egress_active = new SimpleType(386, "egress_active");
    public static final PropertyType interface_value = new SimpleType(387, "interface_value");
    public static final PropertyType fault_high_limit = new SimpleType(388, "fault_high_limit");
    public static final PropertyType fault_low_limit = new SimpleType(389, "fault_low_limit");
    public static final PropertyType low_diff_limit = new SimpleType(390, "low_diff_limit");
    public static final PropertyType strike_count = new SimpleType(391, "strike_count");
    public static final PropertyType time_of_strike_count_reset = new SimpleType(392, "time_of_strike_count_reset");
    public static final PropertyType default_timeout = new SimpleType(393, "default_timeout");
    public static final PropertyType initial_timeout = new SimpleType(394, "initial_timeout");
    public static final PropertyType last_state_change = new SimpleType(395, "last_state_change");
    public static final PropertyType state_change_values = new SimpleType(396, "state_change_values");
    public static final PropertyType timer_running = new SimpleType(397, "timer_running");
    public static final PropertyType timer_state = new SimpleType(398, "timer_state");
    public static final PropertyType apdu_length = new SimpleType(399, "apdu_length");
    public static final PropertyType ip_address = new SimpleType(400, "ip_address");
    public static final PropertyType ip_default_gateway = new SimpleType(401, "ip_default_gateway");
    public static final PropertyType ip_dhcp_enable = new SimpleType(402, "ip_dhcp_enable");
    public static final PropertyType ip_dhcp_lease_time = new SimpleType(403, "ip_dhcp_lease_time");
    public static final PropertyType ip_dhcp_lease_time_remaining = new SimpleType(404, "ip_dhcp_lease_time_remaining");
    public static final PropertyType ip_dhcp_server = new SimpleType(405, "ip_dhcp_server");
    public static final PropertyType ip_dns_server = new SimpleType(406, "ip_dns_server");
    public static final PropertyType bacnet_ip_global_address = new SimpleType(407, "bacnet_ip_global_address");
    public static final PropertyType bacnet_ip_mode = new SimpleType(408, "bacnet_ip_mode");
    public static final PropertyType bacnet_ip_multicast_address = new SimpleType(409, "bacnet_ip_multicast_address");
    public static final PropertyType bacnet_ip_nat_traversal = new SimpleType(410, "bacnet_ip_nat_traversal");
    public static final PropertyType ip_subnet_mask = new SimpleType(411, "ip_subnet_mask");
    public static final PropertyType bacnet_ip_udp_port = new SimpleType(412, "bacnet_ip_udp_port");
    public static final PropertyType bbmd_accept_fd_registrations = new SimpleType(413, "bbmd_accept_fd_registrations");
    public static final PropertyType bbmd_broadcast_distribution_table = new SimpleType(414, "bbmd_broadcast_distribution_table");
    public static final PropertyType bbmd_foreign_device_table = new SimpleType(415, "bbmd_foreign_device_table");
    public static final PropertyType changes_pending = new SimpleType(416, "changes_pending");
    public static final PropertyType command = new SimpleType(417, "command");
    public static final PropertyType fd_bbmd_address = new SimpleType(418, "fd_bbmd_address");
    public static final PropertyType fd_subscription_lifetime = new SimpleType(419, "fd_subscription_lifetime");
    public static final PropertyType link_speed = new SimpleType(420, "link_speed");
    public static final PropertyType link_speeds = new SimpleType(421, "link_speeds");
    public static final PropertyType link_speed_autonegotiate = new SimpleType(422, "link_speed_autonegotiate");
    public static final PropertyType mac_address = new SimpleType(423, "mac_address");
    public static final PropertyType network_interface_name = new SimpleType(424, "network_interface_name");
    public static final PropertyType network_number = new SimpleType(425, "network_number");
    public static final PropertyType network_number_quality = new SimpleType(426, "network_number_quality");
    public static final PropertyType network_type = new SimpleType(427, "network_type");
    public static final PropertyType routing_table = new SimpleType(428, "routing_table");
    public static final PropertyType virtual_mac_address_table = new SimpleType(429, "virtual_mac_address_table");
    public static final PropertyType command_time_array = new SimpleType(430, "command_time_array");
    public static final PropertyType current_command_priority = new SimpleType(431, "current_command_priority");
    public static final PropertyType last_command_time = new SimpleType(432, "last_command_time");
    public static final PropertyType value_source = new SimpleType(433, "value_source");
    public static final PropertyType value_source_array = new SimpleType(434, "value_source_array");
    public static final PropertyType bacnet_ipv6_mode = new SimpleType(435, "bacnet_ipv6_mode");
    public static final PropertyType ipv6_address = new SimpleType(436, "ipv6_address");
    public static final PropertyType ipv6_prefix_length = new SimpleType(437, "ipv6_prefix_length");
    public static final PropertyType bacnet_ipv6_udp_port = new SimpleType(438, "bacnet_ipv6_udp_port");
    public static final PropertyType ipv6_default_gateway = new SimpleType(439, "ipv6_default_gateway");
    public static final PropertyType bacnet_ipv6_multicast_address = new SimpleType(440, "bacnet_ipv6_multicast_address");
    public static final PropertyType ipv6_dns_server = new SimpleType(441, "ipv6_dns_server");
    public static final PropertyType ipv6_auto_addressing_enable = new SimpleType(442, "ipv6_auto_addressing_enable");
    public static final PropertyType ipv6_dhcp_lease_time = new SimpleType(443, "ipv6_dhcp_lease_time");
    public static final PropertyType ipv6_dhcp_lease_time_remaining = new SimpleType(444, "ipv6_dhcp_lease_time_remaining");
    public static final PropertyType ipv6_dhcp_server = new SimpleType(445, "ipv6_dhcp_server");
    public static final PropertyType ipv6_zone_index = new SimpleType(446, "ipv6_zone_index");
    public static final PropertyType assigned_landing_calls = new SimpleType(447, "assigned_landing_calls");
    public static final PropertyType car_assigned_direction = new SimpleType(448, "car_assigned_direction");
    public static final PropertyType car_door_command = new SimpleType(449, "car_door_command");
    public static final PropertyType car_door_status = new SimpleType(450, "car_door_status");
    public static final PropertyType car_door_text = new SimpleType(451, "car_door_text");
    public static final PropertyType car_door_zone = new SimpleType(452, "car_door_zone");
    public static final PropertyType car_drive_status = new SimpleType(453, "car_drive_status");
    public static final PropertyType car_load = new SimpleType(454, "car_load");
    public static final PropertyType car_load_units = new SimpleType(455, "car_load_units");
    public static final PropertyType car_mode = new SimpleType(456, "car_mode");
    public static final PropertyType car_moving_direction = new SimpleType(457, "car_moving_direction");
    public static final PropertyType car_position = new SimpleType(458, "car_position");
    public static final PropertyType elevator_group = new SimpleType(459, "elevator_group");
    public static final PropertyType energy_meter = new SimpleType(460, "energy_meter");
    public static final PropertyType energy_meter_ref = new SimpleType(461, "energy_meter_ref");
    public static final PropertyType escalator_mode = new SimpleType(462, "escalator_mode");
    public static final PropertyType fault_signals = new SimpleType(463, "fault_signals");
    public static final PropertyType floor_text = new SimpleType(464, "floor_text");
    public static final PropertyType group_id = new SimpleType(465, "group_id");
    public static final PropertyType group_mode = new SimpleType(467, "group_mode");
    public static final PropertyType higher_deck = new SimpleType(468, "higher_deck");
    public static final PropertyType installation_id = new SimpleType(469, "installation_id");
    public static final PropertyType landing_calls = new SimpleType(470, "landing_calls");
    public static final PropertyType landing_call_control = new SimpleType(471, "landing_call_control");
    public static final PropertyType landing_door_status = new SimpleType(472, "landing_door_status");
    public static final PropertyType lower_deck = new SimpleType(473, "lower_deck");
    public static final PropertyType machine_room_id = new SimpleType(474, "machine_room_id");
    public static final PropertyType making_car_call = new SimpleType(475, "making_car_call");
    public static final PropertyType next_stopping_floor = new SimpleType(476, "next_stopping_floor");
    public static final PropertyType operation_direction = new SimpleType(477, "operation_direction");
    public static final PropertyType passenger_alarm = new SimpleType(478, "passenger_alarm");
    public static final PropertyType power_mode = new SimpleType(479, "power_mode");
    public static final PropertyType registered_car_call = new SimpleType(480, "registered_car_call");
    public static final PropertyType active_cov_multiple_subscriptions = new SimpleType(481, "active_cov_multiple_subscriptions");
    public static final PropertyType protocol_level = new SimpleType(482, "protocol_level");
    public static final PropertyType reference_port = new SimpleType(483, "reference_port");
    public static final PropertyType deployed_profile_location = new SimpleType(484, "deployed_profile_location");
    public static final PropertyType profile_location = new SimpleType(485, "profile_location");
    public static final PropertyType tags = new SimpleType(486, "tags");
    public static final PropertyType subordinate_node_types = new SimpleType(487, "subordinate_node_types");
    public static final PropertyType subordinate_tags = new SimpleType(488, "subordinate_tags");
    public static final PropertyType subordinate_relationships = new SimpleType(489, "subordinate_relationships");
    public static final PropertyType default_subordinate_relationship = new SimpleType(490, "default_subordinate_relationship");
    public static final PropertyType represents = new SimpleType(491, "represents");
}
